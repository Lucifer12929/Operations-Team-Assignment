{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:4000'\n});\nconst getAllQuestions = () => API.get('/user/get');\n\n// const fakeRequest = async (getAllQuestions, isRejected = false) => {\n//   return await new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (isRejected) {\n//         return reject({ message: 'Error' });\n//       }\n\n//       resolve({ data: getAllQuestions });\n//     }, 1000);\n//   });\n// };\n\nconst response = async () => {\n  return await getAllQuestions();\n};\nconst userdata = response();\nconsole.log(userdata);","map":{"version":3,"names":["axios","API","create","baseURL","getAllQuestions","get","response","userdata","console","log"],"sources":["D:/Project/Demo-project/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst API = axios.create({baseURL: 'http://localhost:4000'})\r\n\r\n\r\n\r\nconst getAllQuestions = () =>  API.get('/user/get');\r\n\r\n\r\n// const fakeRequest = async (getAllQuestions, isRejected = false) => {\r\n//   return await new Promise((resolve, reject) => {\r\n//     setTimeout(() => {\r\n//       if (isRejected) {\r\n//         return reject({ message: 'Error' });\r\n//       }\r\n\r\n//       resolve({ data: getAllQuestions });\r\n//     }, 1000);\r\n//   });\r\n// };\r\n\r\nconst response = async()=>{\r\n    return await getAllQuestions();\r\n} \r\n        const userdata=response();\r\n        console.log(userdata);\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAACC,OAAO,EAAE;AAAuB,CAAC,CAAC;AAI5D,MAAMC,eAAe,GAAG,MAAOH,GAAG,CAACI,GAAG,CAAC,WAAW,CAAC;;AAGnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,YAAS;EACtB,OAAO,MAAMF,eAAe,EAAE;AAClC,CAAC;AACO,MAAMG,QAAQ,GAACD,QAAQ,EAAE;AACzBE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC"},"metadata":{},"sourceType":"module"}