{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:4000'\n});\nconst getAllQuestions = () => API.get('/user/get');\nconst fakeRequest = async function (getAllQuestions) {\n  let isRejected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return await new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (isRejected) {\n        return reject({\n          message: 'Error'\n        });\n      }\n      resolve({\n        data: data\n      });\n    }, 1000);\n  });\n};\nconst data = fakeRequest;\nconsole.log('PPP', data);","map":{"version":3,"names":["axios","API","create","baseURL","getAllQuestions","get","fakeRequest","isRejected","Promise","resolve","reject","setTimeout","message","data","console","log"],"sources":["D:/Project/Demo-project/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst API = axios.create({baseURL: 'http://localhost:4000'})\r\n\r\n\r\n\r\nconst getAllQuestions = () => API.get('/user/get');\r\n\r\n\r\nconst fakeRequest = async (getAllQuestions, isRejected = false) => {\r\n  return await new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (isRejected) {\r\n        return reject({ message: 'Error' });\r\n      }\r\n\r\n      resolve({ data: data });\r\n    }, 1000);\r\n  });\r\n};\r\n\r\n\r\nconst data=fakeRequest;\r\nconsole.log('PPP',data);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAACC,OAAO,EAAE;AAAuB,CAAC,CAAC;AAI5D,MAAMC,eAAe,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,WAAW,CAAC;AAGlD,MAAMC,WAAW,GAAG,gBAAOF,eAAe,EAAyB;EAAA,IAAvBG,UAAU,uEAAG,KAAK;EAC5D,OAAO,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC5CC,UAAU,CAAC,MAAM;MACf,IAAIJ,UAAU,EAAE;QACd,OAAOG,MAAM,CAAC;UAAEE,OAAO,EAAE;QAAQ,CAAC,CAAC;MACrC;MAEAH,OAAO,CAAC;QAAEI,IAAI,EAAEA;MAAK,CAAC,CAAC;IACzB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC;AAGD,MAAMA,IAAI,GAACP,WAAW;AACtBQ,OAAO,CAACC,GAAG,CAAC,KAAK,EAACF,IAAI,CAAC"},"metadata":{},"sourceType":"module"}